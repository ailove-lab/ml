section
  h2 –í—Ä–µ–º—è –ø—Ä–∞–∫—Ç–∏–∫–∏
  h5 ü°ì

mixin py 
  pre.python: code(data-trim data-noescape)
    block

section
  h2 –≤–µ–∫—Ç–æ—Ä–∞ –∏ –º–∞—Ç—Ä–∏—Ü—ã
    
section
  img(src="img/py_neuron.png")
  +py.
    import numpy as np
    x = np.array([1,2,3])
    w = np.array([4,5,6])
    y = np.dot(x,w)
    print(f"–Ω–∞ –≤—Ö–æ–¥–µ –Ω–µ–π—Ä–æ–Ω–∞ {x}, –≤–µ—Å–∞ {w}, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {y}")
  pre.
    –Ω–∞ –≤—Ö–æ–¥–µ –Ω–µ–π—Ä–æ–Ω–∞: [1 2 3], –≤–µ—Å–∞: 32, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 32

section
  img(src="img/py_neuron_X.png")
  +py.
    import numpy as np
    x = np.array([[1,2,3],[1,4,6],[3,2,1]])
    w = np.array([4,5,6])
    y = np.dot(x,w)
    print(f"–Ω–∞ –≤—Ö–æ–¥–µ –Ω–µ–π—Ä–æ–Ω–∞\n {x}, –≤–µ—Å–∞ {w},\n—Ä–µ–∑—É–ª—å—Ç–∞—Ç: {y}")
  pre.
    –Ω–∞ –≤—Ö–æ–¥–µ –Ω–µ–π—Ä–æ–Ω–∞: 
    [[1 2 3]
     [1 4 6]
     [3 2 1]],
    –≤–µ—Å–∞: [32 60 28],
    —Ä–µ–∑—É–ª—å—Ç–∞—Ç: [32 60 28]

section
  img(src="img/py_neuron_n3.png")
  +py.
    x = np.array([[1,2,3],[1,4,6],[3,2,1]])
    w = np.array([[4,5,6],[2,4,5],[4,5,5]])
    y = np.dot(x,w)
  pre.
    —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
    [[20 28 31]
     [36 51 56]
     [20 28 33]]
    
section
  img(src="img/py_neuron_l2.png")
  +py.
    x  = np.array([[1,2,3],[1,4,6],[3,2,1]])
    w1 = np.array([[4,5,6],[2,4,5],[4,5,5]])
    w2 = np.array([[1,1,2],[3,5,2],[4,4,5]])
    y  = np.dot(np.dot(x,w1),w2)
  pre.
    —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
    [[228 284 251]
     [413 515 454]
     [236 292 261]]

section
  h3 –ø—Ä–æ—Å—Ç–µ–π—à–∏–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä

section
  h3 –î–∞–Ω–Ω—ã–µ
  +py.
    # –í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    X = np.array([
        [-2, 4, -1],
        [ 4, 1, -1],
        [ 1, 6, -1],
        [ 2, 4, -1],
        [ 6, 2, -1],
    ])
    # –ö–ª–∞—Å—Å—ã
    Y = np.array([-1,-1,1,1,1])

section
  h3 –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Å–ø—É—Å–∫
  +py.
    # –û–±—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω–æ–≥–æ —Å–ø—É—Å–∫–∞
    def neuron_sgd(X, Y):
        w = np.zeros(len(X[0]))
        eta = 1
        epochs = 20
        for t in range(epochs):
            for i, x in enumerate(X):
                if (np.dot(X[i], w)*Y[i]) <= 0:
                    w = w + eta*X[i]*Y[i]
        return w

section
  h3 –û–±—É—á–µ–Ω–∏–µ
  +py.
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—É–±—á–µ–Ω–∏–µ
    w = neuron_sgd(X,Y)
    # –•–æ–±–∞, –ø–æ–ª—É—á–∏–ª–∏ –≤–µ—Å–∞ –Ω–∞—à–µ–π –º–∞—Ç-–º–æ–¥–µ–ª–∏
    print(f"w = {w}")
  pre.
    w = [ 2.  3. 13.]

  small –£—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–ª–æ—Å–∫–æ—Å—Ç–∏ $y = 13.0 + 2.0 x_1 + 3.0 x_2$
  br
  img(src="img/py_firstclassifier.png")

section
  h3 –¢–µ–ø–µ—Ä—å –≤—ã –¥–∞—Ç–∞-—Å–∞–µ–Ω—Ç–∏—Å—Ç!

section
  h3 –ü—Ä–∏–º–µ—Ä—ã –ø–æ—Å–µ—Ä—å—ë–∑–Ω–µ–π
